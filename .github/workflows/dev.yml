on:
  workflow_dispatch:
  push:
    branches:
      - "*"

env:
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

name: Development Build
jobs:
  build:
    name: ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: linux-amd64-musl
            runner: ubuntu-latest
            target: x86_64-unknown-linux-musl
            musl: true
          - name: linux-arm64
            runner: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
          - name: linux-arm64-musl
            runner: ubuntu-24.04-arm
            target: aarch64-unknown-linux-musl
            musl: true
          - name: macos-amd64
            runner: macos-latest
            target: x86_64-apple-darwin
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@master
      - name: "Install musl dependencies" # https://blog.davidvassallo.me/2021/06/10/lessons-learned-building-statically-linked-rust-binaries-openssl/
        run: "sudo apt update && sudo apt install -y pkg-config musl-tools"
        if: matrix.musl

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@main

      - name: Setup Rust Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          target: ${{ matrix.target }}

      - name: Build
        uses: clechasseur/rs-cargo@main
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@master
        with:
          name: vod-squirrel-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/vod-squirrel
